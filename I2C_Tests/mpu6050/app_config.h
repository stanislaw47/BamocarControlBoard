
/* LICENSE */

#ifndef APP_CONFIG_H_
#define APP_CONFIG_H_

#include "stm32f3xx_hal.h"

#define CONFIG_ACC_ENABLED 				(FRONT_AXLE_MODULE || REAR_AXLE_MODULE)
#define CONFIG_GYR_ENABLED 				(FRONT_AXLE_MODULE || REAR_AXLE_MODULE)
#define CONFIG_TEMP_ENABLED 			0
#define CONFIG_CAN_LIB_ENABLED 			(FRONT_AXLE_MODULE || REAR_AXLE_MODULE || WHEEL_MODULE)
#define CONFIG_STOP_LIGHT_ENABLED 		(REAR_AXLE_MODULE)
#define CONFIG_STOP_PEDAL_ENABLED		(FRONT_AXLE_MODULE)
#define CONFIG_WIRELESS_ENABLED			(WIRELESS_MODULE)
#define CONFIG_SHOCK_ABS_ENABLED		(WHEEL_MODULE)
#define CONFIG_WHEEL_SPEED_ENABLED		(WHEEL_MODULE)
#define CONFIG_BRAKE_DISC_TEMP_ENABLED	(WHEEL_MODULE)

#define CONFIG_RF24_ENABLED				CONFIG_WIRELESS_ENABLED
#define CONFIG_MPU6050_ENABLED 			(CONFIG_ACC_ENABLED | CONFIG_GYR_ENABLED | CONFIG_TEMP_ENABLED)
#define CONFIG_MLX90614_ENABLED			(CONFIG_BRAKE_DISC_TEMP_ENABLED)

#define ASSERT(expr) ((void)0U)

typedef enum
{
    retcode_ok       = HAL_OK,
    retcode_error    = HAL_ERROR,
    retcode_busy     = HAL_BUSY,
    retcode_timeout  = HAL_TIMEOUT
}retcode_t;

#define APP_RETURN_ERR(code, ok_code) if (code != ok_code) return code

#endif /* APP_CONFIG_H_ */
